on:
  pull_request:
    branches:
      - master

name: master
jobs:

  test-setups:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        opt: [vanilla, pandas, excel, json, parquet, hdf5, dask, all]
        python-version: [ 3.7, 3.8 ]
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.token_cicd }}
          fetch-depth: 0
      - name: test dependencies ${{ matrix.opt }}
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ "${{ matrix.opt }}" = "vanilla" ] ; then
              echo "running pip install -v ."
              pip install -v .
          else
              echo "running pip install -v .[${{ matrix.opt }}]"
              pip install -v .[${{ matrix.opt }}]
          fi
          echo ""
          echo "Installed packages:"
          pip freeze
          echo ""
          pytest -s -v tests/dependencies/dep.py --name ${{ matrix.opt }}

  pytest-37:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.token_cicd }}
          fetch-depth: 0
      - name: Install dependencies vanilla
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: test-vanilla
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          timeout_minutes: 20
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_fs_initialisation.py --token "$GOOGLE_APPLICATION_CREDENTIALS"
            pytest -s -v tests/unit/test_path_creation.py --token "$GOOGLE_APPLICATION_CREDENTIALS"
            pytest -s -v tests/unit/test_vanilla.py --token "$GOOGLE_APPLICATION_CREDENTIALS"
            pytest -s -v tests/unit/test_io.py --token "$GOOGLE_APPLICATION_CREDENTIALS"
      - name: Install dependencies pandas
        run: |
          pip install -r pandas-requirements.txt
      - name: test-pandas
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          timeout_minutes: 20
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_pandas.py --token "$GOOGLE_APPLICATION_CREDENTIALS"

  pytest-38:
    runs-on: ubuntu-latest
    needs: pytest-37
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.token_cicd }}
          fetch-depth: 0
      - name: Install dependencies vanilla
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: test-vanilla
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          timeout_minutes: 20
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_fs_initialisation.py --token "$GOOGLE_APPLICATION_CREDENTIALS"
            pytest -s -v tests/unit/test_path_creation.py --token "$GOOGLE_APPLICATION_CREDENTIALS"
            pytest -s -v tests/unit/test_vanilla.py --token "$GOOGLE_APPLICATION_CREDENTIALS"
            pytest -s -v tests/unit/test_io.py --token "$GOOGLE_APPLICATION_CREDENTIALS"
      - name: Install dependencies pandas
        run: |
          pip install -r pandas-requirements.txt
      - name: test-pandas
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          timeout_minutes: 20
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_pandas.py --token "$GOOGLE_APPLICATION_CREDENTIALS"