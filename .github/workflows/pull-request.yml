on:
  pull_request:
    branches:
      - master

name: pull_request
jobs:

  test-setups:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        opt: [vanilla, pandas, excel, json, parquet, hdf5, dask]
        python-version: [ 3.8, 3.9 ]
    steps:

      - uses: actions/checkout@master
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
          ref: refs/heads/${{ github.head_ref }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: test dependencies ${{ matrix.opt }}
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ "${{ matrix.opt }}" = "vanilla" ] ; then
              echo "installing requirements"
              pip install -r requirements.txt
          else
              echo "installing ${{ matrix.opt }}"
              pip install -r ${{ matrix.opt }}-requirements.txt
          fi
          pytest -s -v tests/dependencies/dep.py --name ${{ matrix.opt }}

  pytest-38:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@master
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
          ref: refs/heads/${{ github.head_ref }}

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies vanilla
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install pytest
          pip install pytest-gitignore
          pip install pytest-github-actions-annotate-failures
          pip install .

      - name: test-vanilla
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ORG_SANDBOX_CRED }}
          GOOGLE_APPLICATION_CREDENTIALS_2: ${{ secrets.ORG_DEV_CRED }}
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/vanilla/test_fs_initialisation.py --token "$GOOGLE_APPLICATION_CREDENTIALS" --token2 "$GOOGLE_APPLICATION_CREDENTIALS_2"

      - name: Install dependencies json
        run: |
          pip install -r json-requirements.txt
      - name: test-json
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ORG_SANDBOX_CRED }}
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_json.py --token "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Install dependencies pandas
        run: |
          pip install -r pandas-requirements.txt
      - name: test-pandas
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ORG_SANDBOX_CRED }}
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_pandas.py --token "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Install dependencies parquet
        run: |
          pip install -r parquet-requirements.txt
      - name: test-parquet
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ORG_SANDBOX_CRED }}
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_parquet.py --token "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Install dependencies excel
        run: |
          pip install -r excel-requirements.txt
      - name: test-excel
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ORG_SANDBOX_CRED }}
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_excel.py --token "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Install dependencies hdf5
        run: |
          pip install -r hdf5-requirements.txt
      - name: test-hdf5
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ORG_SANDBOX_CRED }}
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_hdf5.py --token "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Install dependencies dask
        run: |
          pip install -r dask-requirements.txt
      - name: test-dask
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ORG_SANDBOX_CRED }}
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_dask.py --token "$GOOGLE_APPLICATION_CREDENTIALS"

  pytest-39:
    runs-on: ubuntu-latest
    needs: pytest-38
    steps:

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - uses: actions/checkout@master
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
          ref: refs/heads/${{ github.head_ref }}

      - name: Install dependencies vanilla
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: test-vanilla
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ORG_SANDBOX_CRED }}
          GOOGLE_APPLICATION_CREDENTIALS_2: ${{ secrets.ORG_DEV_CRED }}
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/vanilla/test_fs_initialisation.py --token "$GOOGLE_APPLICATION_CREDENTIALS" --token2 "$GOOGLE_APPLICATION_CREDENTIALS_2"

      - name: Install dependencies json
        run: |
          pip install -r json-requirements.txt
      - name: test-json
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ORG_SANDBOX_CRED }}
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_json.py --token "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Install dependencies pandas
        run: |
          pip install -r pandas-requirements.txt
      - name: test-pandas
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ORG_SANDBOX_CRED }}
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_pandas.py --token "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Install dependencies parquet
        run: |
          pip install -r parquet-requirements.txt
      - name: test-parquet
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ORG_SANDBOX_CRED }}
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_parquet.py --token "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Install dependencies excel
        run: |
          pip install -r excel-requirements.txt
      - name: test-excel
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ORG_SANDBOX_CRED }}
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_excel.py --token "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Install dependencies hdf5
        run: |
          pip install -r hdf5-requirements.txt
      - name: test-hdf5
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ORG_SANDBOX_CRED }}
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_hdf5.py --token "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Install dependencies dask
        run: |
          pip install -r dask-requirements.txt
      - name: test-dask
        uses: nick-invision/retry@v2
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ORG_SANDBOX_CRED }}
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_on: error
          command: |
            pytest -s -v tests/unit/test_dask.py --token "$GOOGLE_APPLICATION_CREDENTIALS"